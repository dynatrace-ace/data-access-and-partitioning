---
# Clean apt lock files to avoid permission issues
- name: Clean apt lock files
  become: yes
  shell: rm -f /var/lib/apt/lists/lock /var/cache/apt/archives/lock /var/lib/dpkg/lock* || true
  args:
    warn: no
  changed_when: false
  ignore_errors: yes

# Update apt cache
- name: Update apt cache
  become: yes
  apt:
    update_cache: yes
    cache_valid_time: 3600
  register: apt_update_result
  retries: 5
  delay: 5
  until: apt_update_result is success

# Install required packages for Docker
- name: Install required packages
  become: yes
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - git
    state: present
    update_cache: yes
    force_apt_get: yes
  register: apt_result
  retries: 5
  delay: 5
  until: apt_result is success

# Add Docker's official GPG key
- name: Add Docker GPG key
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

# Add Docker repository
- name: Add Docker repository
  become: yes
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    update_cache: yes
  register: repo_result
  retries: 3
  delay: 5
  until: repo_result is success

# Install Docker Engine
- name: Install Docker
  become: yes
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: yes
    force_apt_get: yes
  register: docker_result
  retries: 3
  delay: 5
  until: docker_result is success

# Make sure Docker service is running
- name: Start Docker service
  become: yes
  service:
    name: docker
    state: started
    enabled: yes

# Install Docker Compose
- name: Install Docker Compose
  become: yes
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: "0755"

# Verify Docker installation
- name: Check Docker version
  command: docker --version
  register: docker_version
  changed_when: false

# Verify Docker Compose installation
- name: Check Docker Compose version
  command: docker-compose --version
  register: docker_compose_version
  changed_when: false

# Print Docker versions
- name: Print Docker versions
  debug:
    msg:
      - "Docker version: {{ docker_version.stdout }}"
      - "Docker Compose version: {{ docker_compose_version.stdout }}"

# Add current user to docker group to avoid using sudo
- name: Add user to docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  become: yes

# Create a directory for the easytrade repository
- name: Create directory for easytrade
  become: yes
  file:
    path: /opt/easytrade
    state: directory
    mode: "0755"

# Clone the Dynatrace easytrade repository
- name: Clone easytrade repository
  become: yes
  git:
    repo: git@github.com:Dynatrace/easytrade.git
    dest: /opt/easytrade
    accept_hostkey: yes
  register: git_clone_result

# Display git clone result
- name: Display git clone result
  debug:
    msg: "Repository cloned successfully to /opt/easytrade"
  when: git_clone_result.changed

# Change directory to the easytrade repository and run docker compose up
- name: Run docker compose up for easytrade
  become: yes
  shell: |
    cd /opt/easytrade
    # Try with docker compose (newer) first, fall back to docker-compose
    if command -v docker &> /dev/null && docker compose version &> /dev/null; then
      docker compose up -d
    elif command -v docker-compose &> /dev/null; then
      docker-compose up -d
    else
      echo "Neither docker compose nor docker-compose is available"
      exit 1
    fi
  args:
    chdir: /opt/easytrade
    executable: /bin/bash
  register: docker_compose_result

# Display docker compose result
- name: Display docker compose result
  debug:
    msg: "Docker Compose started successfully"
  when: docker_compose_result.changed
